*define
windowback
textgosub *text_lb
textbtnstart 100
game


*text_lb
btndef clear
;テキストボタン用の設定
for %0=0 to 10
gettextbtnstr $0,%0+100
if $0="" goto *next_lp;無いから次へ
mov $1,"【"
add $1,$0
add $1,"】\"
mov %1,%0+50
add $1,$%1
strsp %0+10,$1,10,20,30,5,20,20,0,0,1,1
vsp %0+10,0
mov $2,"C10-20P"
itoa $3,%0+10
add $2,$3
textexbtn %0+100,$2
*next_lp
next
print 1
exbtn_d "C10-20"
*tbloop
textbtnwait %0
if %0<0 goto *tbloop
texec
erasetextbtn
for %0=10 to 20:csp 0:next
print 1
saveon
return

*start
setwindow 26,344,26,5,22,22,0,0,0,1,1,#2266BB,0,320,639,479
erasetextwindow 0
linkcolor #FFFF22,#88FFFF
;（表示文中の{}に、変数名,値（エイリアスは使えません）と書くことで、その値を代入できます。ここでは、ヘルプの内容を格納するのに使っています。

<テキストボタン>{$50,テキストをボタンのように扱う機能です。}を使って、このように、<ツールヒント>{$51,マウスを重ねるとこのように字が表示されます。}のようなことも出来ます。\
<ＳＴＲＳＰ命令>{$50,ＳＴＲＳＰ命令は、複数行の文字列スプライトを作ります。\端まで来るか半角￥マークで改行しますが、残念ながら禁則処理はまだ実装していません。}の実験も兼ねています。ちょっと難しいですが、うまく活用すれば<「街」>{$51,チュンソフトのサウンドノベルです。}や<流行り神>{$52,日本一ソフトウェアのホラーアドベンチャーゲームです。}で使われているＴＩＰＳ機能のような効果も出せるはずです。\
end